// NOTE: automatically generated file -- DO NOT EDIT

package companyconfig

import "userclouds.com/infra/migrate"

// these schemas are autogenerated to match all the applied migrations for test perf

// Schema defines the database schema for this package
var Schema = migrate.Schema{
	Migrations:             Migrations,
	CreateStatements:       schemas,
	Columns:                UsedColumns,
	PostgresOnlyExtensions: []string{},
}

var schemas = []string{
	`CREATE TABLE public.companies (
    id uuid NOT NULL,
    name character varying NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    type character varying DEFAULT 'internal'::character varying NOT NULL
);`,
	`CREATE TABLE public.event_metadata (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    service character varying NOT NULL,
    category character varying NOT NULL,
    string_id character varying NOT NULL,
    attributes jsonb DEFAULT '{}'::jsonb NOT NULL,
    code bigint,
    url character varying,
    name character varying,
    description character varying
);`,
	`CREATE TABLE public.invite_keys (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    type bigint NOT NULL,
    key character varying NOT NULL,
    expires timestamp without time zone NOT NULL,
    used boolean NOT NULL,
    company_id uuid,
    role character varying,
    invitee_user_id uuid,
    invitee_email character varying DEFAULT ''::character varying NOT NULL,
    tenant_roles jsonb DEFAULT '{}'::jsonb NOT NULL
);`,
	`CREATE TABLE public.migrations (
    tbl character varying(1000) NOT NULL,
    version integer NOT NULL,
    dsc character varying(1000),
    up character varying(10000) NOT NULL,
    down character varying(1000)
);`,
	`CREATE TABLE public.sessions (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    id_token character varying DEFAULT ''::character varying NOT NULL,
    state character varying DEFAULT ''::character varying NOT NULL,
    access_token character varying DEFAULT ''::character varying NOT NULL,
    refresh_token character varying DEFAULT ''::character varying NOT NULL,
    impersonator_id_token character varying DEFAULT ''::character varying NOT NULL,
    impersonator_access_token character varying DEFAULT ''::character varying NOT NULL,
    impersonator_refresh_token character varying DEFAULT ''::character varying NOT NULL
);`,
	`CREATE TABLE public.sqlshim_proxies (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    host character varying NOT NULL,
    port integer NOT NULL,
    certificates jsonb NOT NULL,
    tenant_id uuid NOT NULL,
    database_id uuid NOT NULL,
    public_key character varying DEFAULT ''::character varying NOT NULL
);`,
	`CREATE TABLE public.tenant_user_column_cleanup (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    run_id character varying NOT NULL
);`,
	`CREATE TABLE public.tenants (
    id uuid NOT NULL,
    name character varying NOT NULL,
    company_id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    tenant_url character varying NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    use_organizations boolean DEFAULT false NOT NULL,
    state character varying DEFAULT 'creating'::character varying NOT NULL,
    primary_region character varying DEFAULT ''::character varying NOT NULL,
    sync_users boolean DEFAULT false NOT NULL,
    sqlshim_config jsonb
);`,
	`CREATE TABLE public.tenants_internal (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    tenant_db_config jsonb NOT NULL,
    log_config jsonb NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    cache_config jsonb DEFAULT '{}'::jsonb NOT NULL,
    connect_on_startup boolean DEFAULT false NOT NULL,
    tenant_migration_replica_db_config jsonb DEFAULT '{}'::jsonb NOT NULL,
    remote_user_region_db_configs jsonb DEFAULT '{}'::jsonb NOT NULL,
    primary_user_region character varying DEFAULT ''::character varying NOT NULL
);`,
	`CREATE TABLE public.tenants_urls (
    id uuid NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone NOT NULL,
    deleted timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL,
    tenant_id uuid NOT NULL,
    tenant_url character varying NOT NULL,
    validated boolean DEFAULT false NOT NULL,
    system boolean DEFAULT false NOT NULL,
    active boolean DEFAULT false NOT NULL,
    dns_verifier character varying DEFAULT ''::character varying NOT NULL,
    certificate_valid_until timestamp without time zone DEFAULT '0001-01-01 00:00:00'::timestamp without time zone NOT NULL
);`,
	`ALTER TABLE ONLY public.companies
    ADD CONSTRAINT companies_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.event_metadata
    ADD CONSTRAINT event_metadata_code_deleted_key UNIQUE (code, deleted);`,
	`ALTER TABLE ONLY public.event_metadata
    ADD CONSTRAINT event_metadata_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.event_metadata
    ADD CONSTRAINT event_metadata_string_id_deleted_key UNIQUE (string_id, deleted);`,
	`ALTER TABLE ONLY public.invite_keys
    ADD CONSTRAINT invite_keys_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (version);`,
	`ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.sqlshim_proxies
    ADD CONSTRAINT sqlshim_proxies_deleted_port_key UNIQUE (deleted, port);`,
	`ALTER TABLE ONLY public.sqlshim_proxies
    ADD CONSTRAINT sqlshim_proxies_pkey PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.tenant_user_column_cleanup
    ADD CONSTRAINT tenant_user_column_cleanup_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.tenants_internal
    ADD CONSTRAINT tenants_internal_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.tenants
    ADD CONSTRAINT tenants_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.tenants
    ADD CONSTRAINT tenants_tenant_url_deleted_key UNIQUE (tenant_url, deleted);`,
	`ALTER TABLE ONLY public.tenants_urls
    ADD CONSTRAINT tenants_urls_pk PRIMARY KEY (deleted, id);`,
	`ALTER TABLE ONLY public.tenants_urls
    ADD CONSTRAINT tenants_urls_tenant_url_deleted_key UNIQUE (tenant_url, deleted);`,
	`CREATE INDEX invite_keys_invitee_user_id_idx ON public.invite_keys USING btree (invitee_user_id);`,
	`CREATE INDEX invite_keys_key_idx ON public.invite_keys USING btree (key);`,
}
