// Define the shape of our configuration
export interface AxeConfiguration {
  rules: {
    [key: string]: {
      enabled: boolean;
      reason?: string;
    };
  };
  tags: string[];
  // New: option to specify which rules to exclusively run
  onlyRules?: string[];
}

const RULES = {
  AccessKeys: 'accesskeys',
  AreaAlt: 'area-alt',
  AriaAllowedAttrMatchesd: 'aria-allowed-attr-matchesd',
  AriaAllowedAttr: 'aria-allowed-attr',
  AriaAllowedRoleMatchesd: 'aria-allowed-role-matchesd',
  AriaAllowedRole: 'aria-allowed-role',
  AriaBrailleEquivalent: 'aria-braille-equivalent',
  AriaCommandName: 'aria-command-name',
  AriaConditionalAttr: 'aria-conditional-attr',
  AriaDeprecatedRole: 'aria-deprecated-role',
  AriaDialogName: 'aria-dialog-name',
  AriaHasAttrMatchesd: 'aria-has-attr-matchesd',
  AriaHiddenBody: 'aria-hidden-body',
  AriaHiddenFocusMatchesd: 'aria-hidden-focus-matchesd',
  AriaHiddenFocus: 'aria-hidden-focus',
  AriaInputFieldName: 'aria-input-field-name',
  AriaMeterName: 'aria-meter-name',
  AriaProgressBarName: 'aria-progressbar-name',
  AriaProhibitedAttr: 'aria-prohibited-attr',
  AriaRequiredAttr: 'aria-required-attr',
  AriaRequiredChildrenMatchesd: 'aria-required-children-matchesd',
  AriaRequiredChildren: 'aria-required-children',
  AriaRequiredParentMatchesd: 'aria-required-parent-matchesd',
  AriaRequiredParent: 'aria-required-parent',
  AriaRoledescription: 'aria-roledescription',
  AriaRoles: 'aria-roles',
  AriaText: 'aria-text',
  AriaToggleFieldName: 'aria-toggle-field-name',
  AriaTooltipName: 'aria-tooltip-name',
  AriaTreeitemName: 'aria-treeitem-name',
  AriaValidAttrValue: 'aria-valid-attr-value',
  AriaValidAttr: 'aria-valid-attr',
  AudioCaption: 'audio-caption',
  AutocompleteMatchesd: 'autocomplete-matchesd',
  AutocompleteValid: 'autocomplete-valid',
  AvoidInlineSpacing: 'avoid-inline-spacing',
  Blink: 'blink',
  ButtonName: 'button-name',
  BypassMatchesd: 'bypass-matchesd',
  Bypass: 'bypass',
  ColorContrastEnhanced: 'color-contrast-enhanced',
  ColorContrastMatchesd: 'color-contrast-matchesd',
  ColorContrast: 'color-contrast',
  CssOrientationLock: 'css-orientation-lock',
  DataTableLargeMatchesd: 'data-table-large-matchesd',
  DataTableMatchesd: 'data-table-matchesd',
  DefinitionList: 'definition-list',
  Dlitem: 'dlitem',
  DocumentTitle: 'document-title',
  DuplicateIdActiveMatchesd: 'duplicate-id-active-matchesd',
  DuplicateIdActive: 'duplicate-id-active',
  DuplicateIdAriaMatchesd: 'duplicate-id-aria-matchesd',
  DuplicateIdAria: 'duplicate-id-aria',
  DuplicateIdMiscMatchesd: 'duplicate-id-misc-matchesd',
  DuplicateId: 'duplicate-id',
  EmptyHeading: 'empty-heading',
  EmptyTableHeader: 'empty-table-header',
  FocusOrderSemantics: 'focus-order-semantics',
  FormFieldMultipleLabels: 'form-field-multiple-labels',
  FrameFocusableContentMatchesd: 'frame-focusable-content-matchesd',
  FrameFocusableContent: 'frame-focusable-content',
  FrameTested: 'frame-tested',
  FrameTitleHasTextMatchesd: 'frame-title-has-text-matchesd',
  FrameTitleUnique: 'frame-title-unique',
  FrameTitle: 'frame-title',
  HasImplicitChromiumRoleMatchesd: 'has-implicit-chromium-role-matchesd',
  HasImplicitChromiumRole: 'has-implicit-chromium-role',
  HeadingMatchesd: 'heading-matchesd',
  HeadingOrder: 'heading-order',
  HiddenContent: 'hidden-content',
  HtmlHasLang: 'html-has-lang',
  HtmlLangValid: 'html-lang-valid',
  HtmlNamespaceMatchesd: 'html-namespace-matchesd',
  HtmlXmlLangMismatch: 'html-xml-lang-mismatch',
  IdenticalLinksSamePurposeMatchesd: 'identical-links-same-purpose-matchesd',
  IdenticalLinksSamePurpose: 'identical-links-same-purpose',
  ImageAlt: 'image-alt',
  ImgRedundantAlt: 'img-redundant-alt',
  InputButtonName: 'input-button-name',
  InputImageAlt: 'input-image-alt',
  InsertedIntoFocusOrderMatchesd: 'inserted-into-focus-order-matchesd',
  IsInitiatorMatchesd: 'is-initiator-matchesd',
  IsVisibleMatchesd: 'is-visible-matchesd',
  IsVisibleOnScreenMatchesd: 'is-visible-on-screen-matchesd',
  LabelContentNameMismatchMatchesd: 'label-content-name-mismatch-matchesd',
  LabelContentNameMismatch: 'label-content-name-mismatch',
  LabelMatchesd: 'label-matchesd',
  LabelTitleOnly: 'label-title-only',
  Label: 'label',
  LandmarkBannerIsTopLevel: 'landmark-banner-is-top-level',
  LandmarkComplementaryIsTopLevel: 'landmark-complementary-is-top-level',
  LandmarkContentinfoIsTopLevel: 'landmark-contentinfo-is-top-level',
  LandmarkHasBodyContextMatchesd: 'landmark-has-body-context-matchesd',
  LandmarkMainIsTopLevel: 'landmark-main-is-top-level',
  LandmarkNoDuplicateBanner: 'landmark-no-duplicate-banner',
  LandmarkNoDuplicateContentinfo: 'landmark-no-duplicate-contentinfo',
  LandmarkNoDuplicateMain: 'landmark-no-duplicate-main',
  LandmarkOneMain: 'landmark-one-main',
  LandmarkUniqueMatchesd: 'landmark-unique-matchesd',
  LandmarkUnique: 'landmark-unique',
  LayoutTableMatchesd: 'layout-table-matchesd',
  LinkInTextBlockMatchesd: 'link-in-text-block-matchesd',
  LinkInTextBlock: 'link-in-text-block',
  LinkName: 'link-name',
  List: 'list',
  Listitem: 'listitem',
  Marquee: 'marquee',
  MetaRefreshNoExceptions: 'meta-refresh-no-exceptions',
  MetaRefresh: 'meta-refresh',
  MetaViewportLarge: 'meta-viewport-large',
  MetaViewport: 'meta-viewport',
  NestedInteractiveMatchesd: 'nested-interactive-matchesd',
  NestedInteractive: 'nested-interactive',
  NoAutoplayAudioMatchesd: 'no-autoplay-audio-matchesd',
  NoAutoplayAudio: 'no-autoplay-audio',
  NoEmptyRoleMatchesd: 'no-empty-role-matchesd',
  NoEmptyRole: 'no-empty-role',
  NoExplicitNameRequiredMatchesd: 'no-explicit-name-required-matchesd',
  NoNamingMethodMatchesd: 'no-naming-method-matchesd',
  NoNegativeTabindexMatchesd: 'no-negative-tabindex-matchesd',
  NoRoleMatchesd: 'no-role-matchesd',
  NotHtmlMatchesd: 'not-html-matchesd',
  ObjectAlt: 'object-alt',
  ObjectIsLoadedMatchesd: 'object-is-loaded-matchesd',
  PAsHeadingMatchesd: 'p-as-heading-matchesd',
  PAsHeading: 'p-as-heading',
  PageHasHeadingOne: 'page-has-heading-one',
  PresentationRoleConflictMatchesd: 'presentation-role-conflict-matchesd',
  PresentationRoleConflict: 'presentation-role-conflict',
  Region: 'region',
  RoleImgAlt: 'role-img-alt',
  ScopeAttrValid: 'scope-attr-valid',
  ScrollableRegionFocusableMatchesd: 'scrollable-region-focusable-matchesd',
  ScrollableRegionFocusable: 'scrollable-region-focusable',
  SelectName: 'select-name',
  ServerSideImageMap: 'server-side-image-map',
  SkipLinkMatchesd: 'skip-link-matchesd',
  SkipLink: 'skip-link',
  SummaryInteractiveMatchesd: 'summary-interactive-matchesd',
  SummaryName: 'summary-name',
  SvgImgAlt: 'svg-img-alt',
  SvgNamespaceMatchesd: 'svg-namespace-matchesd',
  Tabindex: 'tabindex',
  TableDuplicateName: 'table-duplicate-name',
  TableFakeCaption: 'table-fake-caption',
  TableOrGridRoleMatchesd: 'table-or-grid-role-matchesd',
  TargetSize: 'target-size',
  TdHasHeader: 'td-has-header',
  TdHeadersAttr: 'td-headers-attr',
  ThHasDataCells: 'th-has-data-cells',
  ValidLang: 'valid-lang',
  VideoCaption: 'video-caption',
  WidgetNotInlineMatchesd: 'widget-not-inline-matchesd',
  WindowIsTopMatchesd: 'window-is-top-matchesd',
};

export const axeConfig: AxeConfiguration = {
  tags: ['wcag2aa'],

  // Rules to enable
  onlyRules: [RULES.InputButtonName, RULES.Label, RULES.LinkName],

  // Rules to disable (if not using onlyRules)
  rules: {
    [RULES.ColorContrast]: {
      enabled: false,
    },
    [RULES.LandmarkOneMain]: {
      enabled: false,
    },
  },
};

// Helper function to convert our config to Axe's format
export function getAxeRules(): { id: string; enabled: boolean }[] {
  return Object.entries(axeConfig.rules).map(([ruleId, config]) => ({
    id: ruleId,
    enabled: config.enabled,
  }));
}

// Helper function to get rules to exclusively run
export function getOnlyRules(): string[] | undefined {
  return axeConfig.onlyRules;
}
