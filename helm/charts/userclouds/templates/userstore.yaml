apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "userstore.serviceAccount" . }}
  labels:
    {{- include "userclouds.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.roles.userstore }}
    eks.amazonaws.com/role-arn: {{ toYaml . }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userstore
  labels:
    {{- include "userclouds.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configs.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.userstore.replicas | default .Values.userstore.replicas }}
  selector:
    matchLabels:
      {{- include "userstore.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        userclouds.sla: critical
        {{- include "userstore.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.userstore.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.userstore.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.userstore.serviceAccountName }}
      serviceAccountName: {{ toYaml . }}
      {{- end }}
      volumes:
        - name: configmap
          configMap:
            name: userclouds-configs
            items:
              - key: base
                path: {{ printf "base_%s.yaml" .Values.universe }}
              - key: idp
                path: {{ printf "idp/%s.yaml" .Values.universe }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: userstore
          image: "{{ include "userclouds.image" . }}"
          imagePullPolicy: IfNotPresent
          {{- with .Values.tools.workingDir }}
          workingDir: {{ toYaml . }}
          {{- end }}
          {{- with .Values.userstore.command }}
          command:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.userstore.args }}
          args:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- include "userclouds.envConfigMap" . | nindent 10 }}
          env:
            {{- include "userclouds.envVars" . | nindent 10 }}
            {{- with .Values.extraEnv }}
            {{ toYaml . | nindent 10 }}
            {{- end }}
          {{- with .Values.userstore.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "userclouds.lifecycleDrain" . | nindent 10 }}
          volumeMounts:
            - name: configmap
              mountPath: /userclouds/configmaps
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: userstore
              containerPort: 5000
              protocol: TCP
            - name: internal
              containerPort: 5001
              protocol: TCP
          {{- with .Values.userstore.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.userstore.livenessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: userstore
  labels:
    {{- include "userclouds.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
      {{- include "userstore.selectorLabels" . | nindent 6 }}
  ports:
    - name: service
      protocol: TCP
      port: 80
      targetPort: 5000
    - name: internal
      protocol: TCP
      port: 5001
